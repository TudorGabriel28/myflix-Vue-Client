{"version":3,"sources":["webpack:///./src/views/Login.vue","webpack:///./src/views/Login.vue?f1df"],"names":["setup","route","router","store","handleSubmit","loginUser","email","password","dispatch","push","name","statusCode","response","data","fire","icon","title","message","emailError","errorMessage","value","passwordError","params","alert","alertIcon","alertMessage","render","__scopeId"],"mappings":"mOAAK,MAAM,0G,GAA8G,MAAM,4B,EAA2B,eAA2D,MAAvD,MAAM,gBAAgB,eAAa,SAAQ,WAAO,G,GAAoL,MAAM,MAAM,eAAa,qB,GAAgK,MAAM,MAAM,eAAa,wB,GAAmD,MAAM,Y,EAAW,eAA4F,OAAvF,MAAM,sCAAoC,CAAC,eAAsC,UAA9B,MAAM,UAAS,Y,MAA0B,MAAM,sC,EAAqC,eAAoC,KAAjC,MAAM,QAAO,oBAAgB,G,EAAt0B,eAA43B,gB,GAAkD,MAAM,gB,EAAp7B,eAAs8B,yB,EAAt8B,eAAmhC,uB,4GAAnhC,eAA0kC,MAA1kC,EAA0kC,CAAt9B,eAAg9B,MAAh9B,EAAg9B,CAA16B,EAA2D,eAAotB,QAA9sB,eAAa,aAAc,SAAM,YAA5P,kCAAsQ,iCAAS,e,gBAAE,eAA8G,SAAvG,MAAM,QAAQ,KAAK,OAAO,YAAY,gBAA9T,qDAAuV,QAAK,IAAE,eAAa,qB,mBAApB,WAAwC,eAAsE,MAAtE,EAAsE,eAAlB,cAAU,G,eAAQ,eAAmH,SAA5G,MAAM,QAAQ,KAAK,WAAW,YAAY,WAAtf,qDAA0gB,WAAQ,IAAE,eAAa,wB,mBAAvB,cAA8C,eAA4E,MAA5E,EAA4E,eAArB,iBAAa,GAAQ,eAA8R,MAA9R,EAA8R,CAAxQ,EAA4F,eAAsK,MAAtK,EAAsK,CAAtH,EAAoC,eAA4E,GAA9D,GAAI,mBAAoB,CAAh3B,WAA43B,iBAAY,CAAx4B,iB,IAAy6B,eAAqJ,MAArJ,EAAqJ,CAA3H,eAAqH,UAAxjC,EAA29B,eAAyF,GAA3E,GAAI,yBAA0B,CAAvgC,WAAmhC,iBAAmB,CAAtiC,uB,oFAqCe,GACbA,MADa,WAEX,IAAMC,EAAQ,iBACRC,EAAS,iBACTC,EAAQ,iBACd,EAAyB,iBAAjBC,EAAR,EAAQA,aAEFC,EAAYD,EAAY,yDAAC,gHAASE,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,kBAErBJ,EAAMK,SAAS,YAAa,CAChCF,QACAC,aAJyB,OAM3BL,EAAOO,KAAK,CAACC,KAAM,aANQ,mDAWrBC,EAAa,KAAMC,SAASC,KAAKF,WACrB,OAAdA,EACF,OAAMG,KAAK,CACTC,KAAM,OACNC,MAAO,KAAMJ,SAASC,KAAKI,UAG7B,OAAMH,KAAK,CACTC,KAAM,QACNC,MAAO,KAAMJ,SAASC,KAAKI,UApBJ,yDAAD,uDA0B9B,EAAmD,eACjD,QACA,QAFoBC,EAAtB,EAAQC,aAAiCb,EAAzC,EAAkCc,MAKlC,EAAyD,eACvD,WACA,QAFoBC,EAAtB,EAAQF,aAAoCZ,EAA5C,EAAqCa,MAYrC,OAPInB,GAASA,EAAMqB,OAAOC,OACxB,OAAMT,KAAK,CACTC,KAAMd,EAAMqB,OAAOE,UACnBR,MAAOf,EAAMqB,OAAOG,eAIjB,CACLnB,QACAY,aACAX,WACAc,gBACAhB,eCzFN,EAAOqB,OAAS,EAChB,EAAOC,UAAY,kBAEJ","file":"js/Login.b1d05fc3.js","sourcesContent":["<template lang=\"pug\">\n\n.center-container.col-sm-8.offset-sm-2.col-md-6.offset-md-3.col-xl-4.offset-xl-4.col-xxl-3.offset-xxl-4\n  .form-container.px-5.py-5\n    h3.h3.title.pb-3(data-test-id='title') Sign In\n    form(data-test-id='login-form', @submit.prevent='loginUser')\n      input.input(\n        type='text',\n        placeholder='Email address',\n        v-model='email',\n        data-test-id='login-email-input'\n      )\n      .red(data-test-id='login-email-error') {{emailError}}\n      input.input(\n        type='password',\n        placeholder='Password',\n        v-model='password',\n        data-test-id='login-password-input'\n      )\n      .red(data-test-id=\"login-password-error\") {{passwordError}}\n      .row.pt-5\n        .col-sm-6.text-center.text-sm-start\n          button.button Log in\n        .col-sm-6.text-center.text-sm-start\n          p.mb-0 New around here?\n          router-link(:to='{ name: \"Register\" }') Register now\n    .form-message\n      p Forgot your password?\n        router-link(:to='{ name: \"ForgotPassword\" }') Reset your password\n</template>\n\n<script>\nimport { useField, useForm } from 'vee-validate';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { emailValidation, passwordValidation } from '../utils/validations';\nimport { Toast } from '../utils/toastAlert';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    const { handleSubmit } = useForm();\n\n    const loginUser = handleSubmit(async ({ email, password }) => {\n      try {\n        await store.dispatch('loginUser', {\n          email,\n          password\n        });\n        router.push({name: 'HomePage'});\n        /* localStorage.getItem('role') == 'Admin'\n          ? router.push({ name: 'ManagerHomePage' })\n          : router.push({ name: 'HomePage' }); */\n      } catch (error) {\n        const statusCode = error.response.data.statusCode;\n        if (statusCode == '409') {\n          Toast.fire({\n            icon: 'info',\n            title: error.response.data.message\n          });\n        } else {\n          Toast.fire({\n            icon: 'error',\n            title: error.response.data.message\n          });\n        }\n      }\n    });\n\n    const { errorMessage: emailError, value: email } = useField(\n      'email',\n      emailValidation\n    );\n\n    const { errorMessage: passwordError, value: password } = useField(\n      'password',\n      passwordValidation\n    );\n\n    if (route && route.params.alert) {\n      Toast.fire({\n        icon: route.params.alertIcon,\n        title: route.params.alertMessage\n      });\n    }\n\n    return {\n      email,\n      emailError,\n      password,\n      passwordError,\n      loginUser\n    };\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n\n</style>\n","import { render } from \"./Login.vue?vue&type=template&id=7d4cafac&scoped=true&lang=pug\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-7d4cafac\"\n\nexport default script"],"sourceRoot":""}