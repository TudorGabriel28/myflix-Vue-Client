{"version":3,"sources":["webpack:///./src/views/ResetPassword.vue","webpack:///./src/views/ResetPassword.vue?001a"],"names":["setup","router","route","handleSubmit","accountService","validateResetPasswordToken","userId","params","id","token","push","name","alert","alertMessage","alertIcon","passwordError","errorMessage","password","value","confirmPasswordError","confirmPassword","updatePassword","console","log","render"],"mappings":"mKAAK,MAAM,0B,GAA8B,MAAM,kF,GAAsF,MAAM,oC,EAAmC,eAAuE,MAAnE,MAAM,WAAW,eAAa,SAAQ,4BAAwB,G,GAAkD,MAAM,MAAM,eAAa,iC,GAA8L,MAAM,MAAM,eAAa,yC,EAAqO,eAA6D,UAArD,MAAM,SAAS,KAAK,UAAS,mBAAe,G,gDAA3yB,eAA60B,MAA70B,EAA60B,CAAzyB,eAAmyB,MAAnyB,EAAmyB,CAAvsB,eAAisB,MAAjsB,EAAisB,CAAnpB,EAAuE,eAAskB,QAA/jB,SAAM,YAAlQ,kCAA4Q,sCAAc,e,CAAE,eAAuF,OAAvF,EAAuF,eAAtB,iBAAa,G,eAAS,eAAgI,SAAzH,MAAM,QAAQ,KAAK,WAAW,YAAY,eAApa,qDAA4b,WAAQ,IAAE,eAAa,iC,mBAAvB,cAAuD,eAAsG,OAAtG,EAAsG,eAA7B,wBAAoB,G,eAAS,eAA8J,SAAvJ,MAAM,mBAAmB,KAAK,WAAW,YAAY,mBAArpB,qDAAirB,kBAAe,IAAE,eAAa,yC,mBAA9B,qBAAsE,G,sFAoBxuB,GACbA,MADa,WAEX,IAAMC,EAAS,iBACTC,EAAQ,iBACd,EAAyB,iBAAjBC,EAAR,EAAQA,aAER,eAAS,wCAAC,uHAEAC,EAAA,KAAeC,2BAA2B,CAACC,OAAQJ,EAAMK,OAAOC,GAAIC,MAAOP,EAAMK,OAAOE,QAFxF,yDAINR,EAAOS,KAAK,CAAEC,KAAM,QAASJ,OAAQ,CAAEK,OAAO,EAAMC,aAAc,oBAAqBC,UAAW,WAJ5F,yDASV,MAAyD,eACvD,WAAY,QADQC,EAAtB,EAAQC,aAAoCC,EAA5C,EAAqCC,MAIrC,EAAuE,eACrE,mBAAmB,SAASA,GAC1B,OAAGA,IAAUD,EAASC,OACb,iCAHSC,EAAtB,EAAQH,aAA2CI,EAAnD,EAA4CF,MAStCG,EAAiBlB,EAAY,yDAAC,WAAOc,GAAP,0GAE1Bb,EAAA,KAAeiB,eAAe,CAACf,OAAQJ,EAAMK,OAAOC,GAAIC,MAAOP,EAAMK,OAAOE,OAAQQ,GAF1D,yDAIhCK,QAAQC,IAAR,MAJgC,wDAAD,uDASnC,MAAO,CACLN,WACAF,gBACAK,kBACAD,uBACAE,oBC3DN,EAAOG,OAASA,EAED","file":"js/ResetPassword.48ff5c2e.js","sourcesContent":["<template lang=\"pug\">\n.row.align-items-center\n  .col-10.offset-1.col-sm-8.offset-sm-2.col-md-6.offset-md-3.col-xl-4.offset-xl-4\n    .center-container.mx-lg-5.mx-xl-0\n      h4.h4.title(data-test-id='title') Choose your new password\n      form(@submit.prevent='updatePassword')\n        span.red(data-test-id=\"reset-password-password-error\") {{passwordError}}\n        input.input(type='password', placeholder='New password', v-model='password', data-test-id=\"reset-password-password-input\")\n        span.red(data-test-id=\"reset-password-confirm-password-error\") {{confirmPasswordError}}\n        input.input.last-input(type='password', placeholder='Confirm password', v-model='confirmPassword', data-test-id=\"reset-password-confirm-password-input\")\n        button.button(type='submit') Update Password\n</template>\n\n<script>\nimport { onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { accountService } from '../services/accountService'\nimport { useField, useForm } from 'vee-validate';\nimport {passwordValidation} from '../utils/validations'\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const { handleSubmit } = useForm();\n\n    onMounted(async () => {\n      try{\n        await accountService.validateResetPasswordToken({userId: route.params.id, token: route.params.token})\n      } catch(error) {\n        router.push({ name: 'Login', params: { alert: true, alertMessage: 'Link has expired.', alertIcon: 'error' } });\n      }\n\n    })\n\n    const { errorMessage: passwordError, value: password } = useField(\n      'password', passwordValidation\n    );\n\n    const { errorMessage: confirmPasswordError, value: confirmPassword } = useField(\n      'confirmPassword', function(value) {\n        if(value !== password.value) {\n          return 'Passwords are not the same.'\n        }\n        return true\n      }\n    );\n\n    const updatePassword = handleSubmit(async (password) => {\n      try {\n        await accountService.updatePassword({userId: route.params.id, token: route.params.token}, password)\n      } catch(error) {\n        console.log(error)\n      }\n\n    })\n\n    return {\n      password,\n      passwordError,\n      confirmPassword,\n      confirmPasswordError,\n      updatePassword\n    }\n  }\n};\n</script>\n\n\n","import { render } from \"./ResetPassword.vue?vue&type=template&id=1f5ae4e0&lang=pug\"\nimport script from \"./ResetPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ResetPassword.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}